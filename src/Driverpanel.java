
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author laptop ko
 */
public class Driverpanel extends javax.swing.JPanel {

    /**
     * Creates new form driverpanel
     */
    public Driverpanel() {
        initComponents();
        refeshdrivertable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adddriver = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        mname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        licenseno = new javax.swing.JTextField();
        female = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        bday = new com.toedter.calendar.JDateChooser();
        cpno = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        driversave = new javax.swing.JButton();
        gender = new javax.swing.ButtonGroup();
        driver = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        driversearch = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        drivertable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        adddriver.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        adddriver.setTitle("ADD DRIVER");
        adddriver.setMinimumSize(new java.awt.Dimension(450, 537));
        adddriver.setModal(true);

        jLabel9.setBackground(new java.awt.Color(153, 153, 153));
        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("First name");

        jLabel26.setBackground(new java.awt.Color(153, 153, 153));
        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel26.setText("Middle name");

        jLabel27.setBackground(new java.awt.Color(153, 153, 153));
        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel27.setText("Last name");

        jLabel30.setBackground(new java.awt.Color(153, 153, 153));
        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel30.setText("Gender");

        jLabel32.setBackground(new java.awt.Color(153, 153, 153));
        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel32.setText("Address");

        jLabel29.setBackground(new java.awt.Color(153, 153, 153));
        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel29.setText("Birthday");

        jLabel33.setBackground(new java.awt.Color(153, 153, 153));
        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel33.setText("License number");

        jLabel34.setBackground(new java.awt.Color(153, 153, 153));
        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel34.setText("Contact number");

        fname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fname.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        mname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mname.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lname.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        address.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        address.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        licenseno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        licenseno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        licenseno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                licensenoActionPerformed(evt);
            }
        });

        gender.add(female);
        female.setText("Female");
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleActionPerformed(evt);
            }
        });

        gender.add(male);
        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        bday.setDateFormatString("yyyy/MM/dd");

        cpno.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cpno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel25.setBackground(new java.awt.Color(153, 153, 153));
        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("FILL UP FORM");
        jLabel25.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        driversave.setBackground(new java.awt.Color(204, 204, 204));
        driversave.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        driversave.setForeground(new java.awt.Color(0, 180, 0));
        driversave.setText("SAVE");
        driversave.setToolTipText("click to record");
        driversave.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        driversave.setMaximumSize(new java.awt.Dimension(68, 29));
        driversave.setMinimumSize(new java.awt.Dimension(68, 29));
        driversave.setPreferredSize(new java.awt.Dimension(68, 29));
        driversave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                driversaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fname))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mname))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lname))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(address))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(licenseno))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(male, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 125, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cpno))
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(driversave, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel26, jLabel27, jLabel29, jLabel30, jLabel32, jLabel33, jLabel34, jLabel9});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(mname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(female)
                    .addComponent(male))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel29)
                    .addComponent(bday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(licenseno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(cpno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(driversave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {address, bday, female, fname, jLabel26, jLabel27, jLabel29, jLabel30, jLabel32, jLabel33, jLabel34, jLabel9, male, mname});

        javax.swing.GroupLayout adddriverLayout = new javax.swing.GroupLayout(adddriver.getContentPane());
        adddriver.getContentPane().setLayout(adddriverLayout);
        adddriverLayout.setHorizontalGroup(
            adddriverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adddriverLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        adddriverLayout.setVerticalGroup(
            adddriverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adddriverLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Search");

        driversearch.setBackground(new java.awt.Color(204, 204, 204));
        driversearch.setToolTipText("type to search");
        driversearch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        driversearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                driversearchKeyReleased(evt);
            }
        });

        jButton4.setText("ADD DRIVER");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        drivertable.setBackground(new java.awt.Color(204, 204, 255));
        drivertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Driver's NAme", "License Number", "Contact Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        drivertable.setToolTipText("click the row to edit or delete");
        drivertable.setGridColor(new java.awt.Color(153, 255, 153));
        drivertable.setIntercellSpacing(new java.awt.Dimension(1, 2));
        drivertable.setSelectionBackground(new java.awt.Color(0, 84, 215));
        drivertable.setSelectionForeground(new java.awt.Color(204, 204, 0));
        drivertable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drivertableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(drivertable);
        if (drivertable.getColumnModel().getColumnCount() > 0) {
            drivertable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Driver's table");

        javax.swing.GroupLayout driverLayout = new javax.swing.GroupLayout(driver);
        driver.setLayout(driverLayout);
        driverLayout.setHorizontalGroup(
            driverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(driverLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(driverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(driverLayout.createSequentialGroup()
                        .addGroup(driverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(driverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                            .addComponent(driversearch)))))
        );

        driverLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {delete, jButton4, update});

        driverLayout.setVerticalGroup(
            driverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(driverLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(driverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(driversearch, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(driverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(driverLayout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        driverLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {delete, driversearch, jButton4, jLabel2, update});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(driver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(driver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void drivertableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drivertableMouseClicked
        update.setEnabled(true);
        delete.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_drivertableMouseClicked

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleActionPerformed

    private void femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleActionPerformed

    private void licensenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_licensenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_licensenoActionPerformed

    private void driversaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_driversaveActionPerformed
        if (fname.getText().isEmpty() || mname.getText().isEmpty() || lname.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please complete the name", "Message", JOptionPane.WARNING_MESSAGE);
        } else if (gender.isSelected(null)) {
            JOptionPane.showMessageDialog(null, "Please select gender", "Message", JOptionPane.WARNING_MESSAGE);
        } else if (address.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill up the address", "Message", JOptionPane.WARNING_MESSAGE);
        } else if (bday.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Please fill up the birthday", "Message", JOptionPane.WARNING_MESSAGE);
        } else if (licenseno.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill up license number", "Message", JOptionPane.WARNING_MESSAGE);
        } else if (cpno.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill up phone number", "Message", JOptionPane.WARNING_MESSAGE);
        } else {

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(new connect().database_url);

                if ("SAVE".equals(driversave.getText())) {
                    PreparedStatement pstmt = con.prepareStatement("INSERT INTO driver VALUES (null,?,?,?,?,?,?,?,?);");
                    pstmt.setString(1, fname.getText());
                    pstmt.setString(2, mname.getText());
                    pstmt.setString(3, lname.getText());
                    if (female.isSelected()) {
                        pstmt.setString(4, "f");
                    } else if (male.isSelected()) {
                        pstmt.setString(4, "m");
                    }
                    pstmt.setString(5, address.getText());
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
                    pstmt.setString(6, sdf.format(bday.getDate()));
                    pstmt.setString(7, licenseno.getText());
                    pstmt.setString(8, cpno.getText());
                    pstmt.execute();
                    JOptionPane.showMessageDialog(null, "Successfully saved", "Message", -1);

                } else {
                    int row = drivertable.getSelectedRow();
                    TableModel model = drivertable.getModel();
                    String l = model.getValueAt(row, 0).toString();
                    PreparedStatement pstmt = con.prepareStatement("UPDATE driver "
                            + "set fname = ?,mname =?,lname=?,gender=?,"
                            + "address=?,bday=?,license_no=?,cellnumber=? WHERE d_id ='" + l + "';");

                    pstmt.setString(1, fname.getText());
                    pstmt.setString(2, mname.getText());
                    pstmt.setString(3, lname.getText());
                    if (female.isSelected()) {
                        pstmt.setString(4, "f");
                    } else if (male.isSelected()) {
                        pstmt.setString(4, "m");
                    }
                    pstmt.setString(5, address.getText());
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
                    pstmt.setString(6, sdf.format(bday.getDate()));
                    pstmt.setString(7, licenseno.getText());
                    pstmt.setString(8, cpno.getText());
                    pstmt.execute();
                    JOptionPane.showMessageDialog(null, "Successfully updated", "Message", -1);
                    this.adddriver.dispose();
                }

                fname.setText("");
                mname.setText("");
                lname.setText("");
                gender.clearSelection();
                address.setText("");
                bday.setDate(null);
                licenseno.setText("");
                cpno.setText("");
                driversave.setText("SAVE");
                refeshdrivertable();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Driverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_driversaveActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        adddriver.setLocationRelativeTo(null);
        adddriver.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if (drivertable.getSelectedRowCount() > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one(1)", "Message", 0);
        } else {
            int row = drivertable.getSelectedRow();
            TableModel model = drivertable.getModel();
            String l = model.getValueAt(row, 0).toString();

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(new connect().database_url);
                Statement smt = con.createStatement();
                ResultSet rs = smt.executeQuery("SELECT * FROM driver WHERE d_id = '" + l + "';");

                if (rs.first()) {
                    fname.setText(rs.getString("fname"));
                    mname.setText(rs.getString("mname"));
                    lname.setText(rs.getString("lname"));
                    String g = rs.getString("gender");
                    if ("m".equals(g)) {
                        male.setSelected(true);
                    } else {
                        female.setSelected(true);
                    }
                    address.setText(rs.getString("address"));
                    bday.setDate(rs.getDate("bday"));
                    licenseno.setText(rs.getString("license_no"));
                    cpno.setText(rs.getString("cellnumber"));
                    driversave.setText("UPDATE");
                    adddriver.setLocationRelativeTo(null);
                    adddriver.setVisible(true);
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Driverpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int rowcount = drivertable.getSelectedRowCount();
        int[] rows = drivertable.getSelectedRows();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(new connect().database_url);
            Statement smt = con.createStatement();
            int x = JOptionPane.showConfirmDialog(null, "Delete the selected " + rowcount + " row(s)?", "Warning", JOptionPane.YES_NO_OPTION, 2);
            if (x == JOptionPane.YES_OPTION) {
                while (rowcount > 0) {
                    TableModel model = drivertable.getModel();
                    String l = model.getValueAt(rows[rowcount - 1], 0).toString();
                    String sql = "DELETE FROM driver WHERE d_id = '" + l + "';";
                    smt.execute(sql);
                    rowcount--;
                }
            }
            refeshdrivertable();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Driverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void driversearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_driversearchKeyReleased
        String pangita = driversearch.getText();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(new connect().database_url);
            Statement stmt = con.createStatement();
            String sql = "SELECT * FROM driver WHERE 1=1 ";
            if (pangita != (null)) {
                sql = sql + "and (fname LIKE '%" + pangita + "%'"
                        + " or lname LIKE '%" + pangita + "%')";
            }
            ResultSet rs = stmt.executeQuery(sql);
            DefaultTableModel studentsModel = new connect().dt;
            int row = 0;
            while (rs.next()) {
                studentsModel.addRow(new Object[]{});
                studentsModel.setValueAt(rs.getString("d_id"), row, 0);
                String n1 = rs.getString("fname");
                String n = rs.getString("mname");
                char n2 = n.charAt(0);
                String n3 = rs.getString("lname");
                studentsModel.setValueAt(n1 + " " + n2 + "." + " " + n3, row, 1);
                studentsModel.setValueAt(rs.getString("license_no"), row, 2);
                studentsModel.setValueAt(rs.getString("cellnumber"), row, 3);
                row++;
            }
            drivertable.setModel(studentsModel);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Driverpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_driversearchKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog adddriver;
    private javax.swing.JTextField address;
    private com.toedter.calendar.JDateChooser bday;
    private javax.swing.JTextField cpno;
    private javax.swing.JButton delete;
    private javax.swing.JPanel driver;
    private javax.swing.JButton driversave;
    private javax.swing.JTextField driversearch;
    private javax.swing.JTable drivertable;
    private javax.swing.JRadioButton female;
    private javax.swing.JTextField fname;
    private javax.swing.ButtonGroup gender;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField licenseno;
    private javax.swing.JTextField lname;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField mname;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void refeshdrivertable() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(new connect().database_url);
            Statement smt = con.createStatement();

            ResultSet rs = smt.executeQuery("SELECT * FROM driver");
            DefaultTableModel studentsModel = new connect().dt;
            int row = 0;
            while (rs.next()) {
                studentsModel.addRow(new Object[]{});
                studentsModel.setValueAt(rs.getString("d_id"), row, 0);
                String n1 = rs.getString("fname");
                String n = rs.getString("mname");
                char n2 = n.charAt(0);
                String n3 = rs.getString("lname");
                studentsModel.setValueAt(n1 + " " + n2 + "." + " " + n3, row, 1);
                studentsModel.setValueAt(rs.getString("license_no"), row, 2);
                studentsModel.setValueAt(rs.getString("cellnumber"), row, 3);

                row++;
            }
            drivertable.setModel(studentsModel);

            update.setEnabled(false);
            delete.setEnabled(false);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Frame1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

}
